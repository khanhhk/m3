# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-mt-channel-broker-controller
  labels:
    eventing.knative.dev/release: "v0.16.4"
rules:
  # Configs resources and status we care about.
  - apiGroups:
      - ""
    resources:
      - "namespaces/finalizers"
    verbs:
      - "update"
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-mt-broker-filter
  labels:
    eventing.knative.dev/release: "v0.16.4"
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - triggers
      - triggers/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - get
      - list
      - watch

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mt-broker-filter
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-mt-broker-ingress
  labels:
    eventing.knative.dev/release: "v0.16.4"
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - get
      - list
      - watch

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mt-broker-ingress
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-mt-channel-broker-controller
  labels:
    eventing.knative.dev/release: "v0.16.4"
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-mt-channel-broker-controller
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-eventing-mt-broker-filter
  labels:
    eventing.knative.dev/release: "v0.16.4"
subjects:
  - kind: ServiceAccount
    name: mt-broker-filter
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-mt-broker-filter
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-eventing-mt-broker-ingress
  labels:
    eventing.knative.dev/release: "v0.16.4"
subjects:
  - kind: ServiceAccount
    name: mt-broker-ingress
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-mt-broker-ingress
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This one is a placeholder to bring the replicas down to zero.
# Remove this after .16 ships.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-filter
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  replicas: 0
  selector:
    matchLabels:
      eventing.knative.dev/brokerRole: filter
  template:
    metadata:
      labels:
        eventing.knative.dev/brokerRole: filter
        eventing.knative.dev/release: "v0.16.4"
    spec:
      serviceAccountName: mt-broker-filter
      containers:
        - name: filter
          terminationMessagePolicy: FallbackToLogsOnError
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtbroker/filter@sha256:aa311efd9578a32a05f3d569bd685d96953cb0bf8b46b5a457a952e040a1605a
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9092
              name: metrics
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: filter
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/eventing
            - name: FILTER_PORT
              value: "8080"
          securityContext:
            allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mt-broker-filter
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  selector:
    matchLabels:
      eventing.knative.dev/brokerRole: filter
  template:
    metadata:
      labels:
        eventing.knative.dev/brokerRole: filter
        eventing.knative.dev/release: "v0.16.4"
    spec:
      serviceAccountName: mt-broker-filter
      containers:
        - name: filter
          terminationMessagePolicy: FallbackToLogsOnError
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtbroker/filter@sha256:aa311efd9578a32a05f3d569bd685d96953cb0bf8b46b5a457a952e040a1605a
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: filter
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/eventing
            - name: FILTER_PORT
              value: "8080"
          securityContext:
            allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    eventing.knative.dev/brokerRole: filter
    eventing.knative.dev/release: "v0.16.4"
  name: broker-filter
  namespace: knative-eventing
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: http-metrics
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    eventing.knative.dev/brokerRole: filter

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This one is a placeholder to bring the replicas down to zero.
# Remove this after .16 ships.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-ingress
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  replicas: 0
  selector:
    matchLabels:
      eventing.knative.dev/brokerRole: ingress
  template:
    metadata:
      labels:
        eventing.knative.dev/brokerRole: ingress
        eventing.knative.dev/release: "v0.16.4"
    spec:
      serviceAccountName: mt-broker-ingress
      containers:
        - name: ingress
          terminationMessagePolicy: FallbackToLogsOnError
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtbroker/ingress@sha256:72d3fc196833a254280e66f034960ce630b43b91e4fa5253c5a909f1c0cb3e31
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9092
              name: metrics
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: ingress
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/eventing
            - name: INGRESS_PORT
              value: "8080"
          securityContext:
            allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mt-broker-ingress
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  selector:
    matchLabels:
      eventing.knative.dev/brokerRole: ingress
  template:
    metadata:
      labels:
        eventing.knative.dev/brokerRole: ingress
        eventing.knative.dev/release: "v0.16.4"
    spec:
      serviceAccountName: mt-broker-ingress
      containers:
        - name: ingress
          terminationMessagePolicy: FallbackToLogsOnError
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtbroker/ingress@sha256:72d3fc196833a254280e66f034960ce630b43b91e4fa5253c5a909f1c0cb3e31
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: ingress
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/eventing
            - name: INGRESS_PORT
              value: "8080"
          securityContext:
            allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    eventing.knative.dev/brokerRole: ingress
    eventing.knative.dev/release: "v0.16.4"
  name: broker-ingress
  namespace: knative-eventing
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: http-metrics
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    eventing.knative.dev/brokerRole: ingress

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mt-broker-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mt-broker-controller
  template:
    metadata:
      labels:
        app: mt-broker-controller
        eventing.knative.dev/release: "v0.16.4"
    spec:
      serviceAccountName: eventing-controller
      containers:
        - name: mt-broker-controller
          terminationMessagePolicy: FallbackToLogsOnError
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtchannel_broker@sha256:946aa6aa042788bd554338da954c8cdbc0e1f94cce48b8ba6cb842024e10df8b
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            # Due to the trivial per-Broker cost, we _can_ inject Brokers into every
            # namespace by default. To change this default simply change this
            # to "true".  To opt namespaces out of Broker injection, label
            # them with:
            #    knative-eventing-injection: disabled
            - name: BROKER_INJECTION_DEFAULT
              value: "false"
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: broker-ingress-hpa
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mt-broker-ingress
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: broker-filter-hpa
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: "v0.16.4"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mt-broker-filter
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

---
